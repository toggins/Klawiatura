name: Build and release binaries

on:
  push:
    branches: [master]
    tags: [stable, cpack-test]

jobs:
  release:
    name: Release ${{ github.ref_name == 'master' && 'dev' || github.ref_name }} binaries for ${{ matrix.cfg.os-name }}
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    strategy:
      matrix:
        cfg:
          - os-name: WinXP
            exe_suffix: .exe
            lib_prefix: ""
            fmod_dll_suffix: .dll
            mingw_bits: 32
          - os-name: Win64
            exe_suffix: .exe
            lib_prefix: ""
            fmod_dll_suffix: .dll
            mingw_bits: 64
          - os-name: Linux
            exe_suffix: ""
            lib_prefix: lib
            fmod_dll_suffix: .so.14
    env:
      OUTNAME: Klawiatura-${{ matrix.cfg.os-name }}-${{ github.ref_name == 'master' && 'dev' || github.ref_name }}
      MINGW_ARCH: ${{ matrix.cfg.bits == 32 && 'i686' || 'x86_64' }}
      MINGW_SHIT: >-
        -D CMAKE_C_COMPILER=${MINGW_ARCH}-w64-mingw32-gcc
        -D CMAKE_CXX_COMPILER=${MINGW_ARCH}-w64-mingw32-g++
        -D CMAKE_RC_COMPILER=${MINGW_ARCH}-w64-mingw32-windres
        -D CMAKE_SYSTEM_NAME=Windows
        -D CMAKE_FIND_ROOT_PATH=/usr/${MINGW_ARCH}-w64-mingw32
        -D CMAKE_FIND_ROOT_PATH_MODE_PROGRAM=NEVER
        -D CMAKE_FIND_ROOT_PATH_MODE_LIBRARY=ONLY
        -D CMAKE_FIND_ROOT_PATH_MODE_INCLUDE=ONLY
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Source fmod legally
        uses: actions/checkout@v5
        with:
          repository: toggins/fmod
          token: ${{ secrets.FMOD_TOKEN }}
          path: external/fmod
          ref: master
      - name: Install deps
        run: |
          sudo apt-get update && sudo apt-get install --yes \
            libgl1-mesa-dev python3-jinja2 \
            libx11-dev libxext-dev libxrandr-dev libxcursor-dev libxi-dev libxinerama-dev
      - name: Install MinGW
        if: matrix.cfg.mingw_bits == 32 || matrix.cfg.mingw_bits == 64
        uses: egor-tensin/setup-mingw@v2.2.0
        with:
          platform: ${{ matrix.cfg.mingw_bits == 32 && 'x86' || 'x64' }}
          cc: 0
      - name: Cache dependency sources
        uses: actions/cache@v4
        with:
          path: build/_deps/*-src
          key: cmake-deps-src-${{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: cmake-deps-src-
      - name: Cache dependency build objects
        uses: actions/cache@v4
        with:
          path: |
            build/_deps/*-build
            build/_deps/*-subbuild
          key: cmake-deps-obj-${{ matrix.cfg.os-name }}-${{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: cmake-deps-obj-${{ matrix.cfg.os-name }}-
      - name: Configure
        run: |
          cmake -G Ninja -S . -B build \
            ${{ (matrix.cfg.mingw_bits == 32 || matrix.cfg.mingw_bits == 64) && env.MINGW_SHIT }} \
            -D CMAKE_BUILD_TYPE=Release -D CPACK_ARCHIVE_FILE_NAME=${{ env.OUTNAME }}
      - name: Build
        run: cmake --build build --target Klawiatura
      - name: Package
        run: cmake --build build --target package
      - name: Release ${{ github.ref_name == 'master' && 'dev' || github.ref_name }} build for ${{ matrix.cfg.os-name }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name == 'master' && 'dev' || github.ref_name }}
          files: build/${{ env.OUTNAME }}.zip
