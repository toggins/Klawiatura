name: Build and release binaries

on:
  push:
    branches: [master]
    tags: [stable]

jobs:
  release-win:
    name: Release ${{ github.ref_name == 'master' && 'dev' || github.ref_name }} binaries for ${{ matrix.cfg.os-name }}
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    strategy:
      matrix:
        cfg:
          - os-name: WinXP
            cc: i686-w64-mingw32-gcc
            cxx: i686-w64-mingw32-g++
            exe_suffix: .exe
            lib_prefix: ""
            fmod_dll_suffix: .dll
            mingw_bits: 32
          - os-name: Win64
            cc: x86_64-w64-mingw32-gcc
            cxx: x86_64-w64-mingw32-g++
            exe_suffix: .exe
            lib_prefix: ""
            fmod_dll_suffix: .dll
            mingw_bits: 64
          - os-name: Linux
            exe_suffix: ""
            lib_prefix: lib
            fmod_dll_suffix: .so.14
    env:
      OUTFILE: Klawiatura-${{ matrix.cfg.os-name }}-${{ github.ref_name == 'master' && 'dev' || github.ref_name }}.zip
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Source fmod legally
        uses: actions/checkout@v4
        with:
          repository: toggins/fmod
          token: ${{ secrets.FMOD_TOKEN }}
          path: external/fmod
          ref: master
      - name: Install deps
        run: |
          sudo apt-get update && sudo apt-get install --yes \
            libgl1-mesa-dev python3-jinja2 \
            libx11-dev libxext-dev libxrandr-dev libxcursor-dev libxi-dev libxinerama-dev
      - name: Install MinGW
        if: matrix.cfg.mingw_bits == 32 || matrix.cfg.mingw_bits == 64
        uses: egor-tensin/setup-mingw@v2.2.0
        with:
          platform: ${{ matrix.cfg.mingw_bits == 32 && 'x86' || 'x64' }}
          cc: 0
      - name: Configure for MinGW
        if: matrix.cfg.mingw_bits == 32 || matrix.cfg.mingw_bits == 64
        run: |
          cmake -G Ninja -S . -B build -D CMAKE_BUILD_TYPE=Release \
            -D CMAKE_C_COMPILER=${{ matrix.cfg.cc }} \
            -D CMAKE_CXX_COMPILER=${{ matrix.cfg.cxx }} \
            -D CMAKE_SYSTEM_NAME=Windows \
            -D CMAKE_FIND_ROOT_PATH=/usr/${{ matrix.cfg.bits == 32 && 'i686' || 'x86_64' }}-w64-mingw32 \
            -D CMAKE_FIND_ROOT_PATH_MODE_PROGRAM=NEVER \
            -D CMAKE_FIND_ROOT_PATH_MODE_LIBRARY=ONLY \
            -D CMAKE_FIND_ROOT_PATH_MODE_INCLUDE=ONLY
      - name: Configure for Linux
        if: matrix.cfg.mingw_bits != 32 && matrix.cfg.mingw_bits != 64
        run: cmake -G Ninja -S . -B build -D CMAKE_BUILD_TYPE=Release
      - name: Build
        run: cmake --build build --config Release --target all
      - name: Bundle
        run: |
          rm -rf Klawiatura; mkdir -p Klawiatura
          cp -rt Klawiatura \
            build/Klawiatura${{ matrix.cfg.exe_suffix }} \
            build/${{ matrix.cfg.lib_prefix }}fmodL${{ matrix.cfg.fmod_dll_suffix }} \
            build/data UNLICENSE README.md
          zip -r $OUTFILE Klawiatura/
      - name: Release ${{ github.ref_name == 'master' && 'dev' || github.ref_name }} build for ${{ matrix.cfg.os-name }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name == 'master' && 'dev' || github.ref_name }}
          files: ${{ env.OUTFILE }}
