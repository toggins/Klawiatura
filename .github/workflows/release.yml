name: Build and release binaries

on:
  push:
    branches: [master]
    tags: [stable]

jobs:
  release-win:
    name: Release ${{ github.ref_name == 'master' && 'dev' || github.ref_name }} binaries for ${{ matrix.cfg.os-name }}
    runs-on: ${{ matrix.cfg.runner-os }}
    permissions:
      contents: write
    strategy:
      matrix:
        cfg:
          - os-name: WinXP
            runner-os: windows-2022
            vstools_arch: x86
            vsproj_arch: Win32
          - os-name: Win64
            runner-os: windows-2022
            vstools_arch: amd64
            vsproj_arch: x64
          - os-name: Linux
            runner-os: ubuntu-24.04
    env:
      OUTFILE: Klawiatura-${{ matrix.cfg.os-name }}-${{ github.ref_name == 'master' && 'dev' || github.ref_name }}.zip
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Source fmod legally
        uses: actions/checkout@v4
        with:
          repository: toggins/fmod
          token: ${{ secrets.FMOD_TOKEN }}
          path: external/fmod
          ref: master
      - name: Install Windows deps
        if: ${{ matrix.cfg.vstools_arch }}
        run: py -m pip install jinja2
      - name: Install Linux deps
        if: ${{ !matrix.cfg.vstools_arch }}
        run: sudo apt-get update && sudo apt-get install --yes libgl1-mesa-dev python3-jinja2
      - name: Build for ${{ matrix.cfg.os-name }} (Windose)
        if: ${{ matrix.cfg.vstools_arch }}
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat" -arch=${{ matrix.cfg.vstools_arch }}
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -G "Visual Studio 17 2022" -A ${{ matrix.cfg.vsproj_arch }}
          cmake --build build --config Release --target ALL_BUILD
      - name: Build for ${{ matrix.cfg.os-name }} (Linux)
        if: ${{ !matrix.cfg.vstools_arch }}
        run: |
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -G Ninja
          cmake --build build --config Release --target all
      - name: Bundle (Windose)
        if: ${{ matrix.cfg.vstools_arch }}
        run: |
          New-Item -Force -Path 'Klawiatura' -ItemType 'Directory'
          Copy-Item -Recurse -Destination 'Klawiatura' -Path `
            @('build/Release/Klawiatura.exe', 'build/Release/fmodL.dll', 'build/Release/data', `
              'UNLICENSE', 'README.md')
          7z a $env:OUTFILE Klawiatura
      - name: Bundle (Linux)
        if: ${{ !matrix.cfg.vstools_arch }}
        run: |
          mkdir -p Klawiatura
          cp -r build/Klawiatura build/fmodL.so.14 build/data UNLICENSE README.md Klawiatura
          zip -r $OUTFILE Klawiatura/
      - name: Release ${{ github.ref_name == 'master' && 'dev' || github.ref_name }} build for ${{ matrix.cfg.os-name }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name == 'master' && 'dev' || github.ref_name }}
          files: ${{ env.OUTFILE }}
